{"version":3,"sources":["webpack:///./src/styles/post.module.css","webpack:///./src/components/doc.js","webpack:///./src/templates/templateDoc.js"],"names":["module","exports","Doc","title","path","excerpt","html","className","style","post","postContent","to","dangerouslySetInnerHTML","__html","propTypes","PropTypes","string","DocTemplate","data","markdownRemark","frontmatter","autoExcerpt","id","description","key","object","isRequired","docsQuery"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,WAAa,iCAAiC,KAAO,2BAA2B,KAAO,2BAA2B,IAAM,0BAA0B,SAAW,+BAA+B,YAAc,kCAAkC,WAAa,iCAAiC,UAAY,gCAAgC,gBAAkB,sCAAsC,aAAe,mCAAmC,iBAAmB,uCAAuC,UAAY,gCAAgC,aAAe,qC,0LCIvnBC,EAAM,SAAC,GAKN,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,KAGA,OACE,yBAAKC,UAAWC,IAAMC,MACpB,yBAAKF,UAAWC,IAAME,aACpB,wBAAIH,UAAWC,IAAML,OAClBE,EAAU,kBAAC,OAAD,CAAMM,GAAIP,GAAOD,GAAgBA,GAG7CE,EACC,oCACE,2BAAIA,IAGN,oCACE,yBAAKO,wBAAyB,CAAEC,OAAQP,SAQpDJ,EAAIY,UAAY,CACdX,MAAOY,IAAUC,OACjBZ,KAAMW,IAAUC,OAChBX,QAASU,IAAUC,OACnBV,KAAMS,IAAUC,QAGHd,QCjCTe,EAAc,SAAC,GAAc,IAAD,IAAXC,KAMZC,eANuB,IAE9BC,YAAejB,EAFe,EAEfA,MAAOC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,QACnBgB,EAHqB,EAG9BhB,QACAiB,EAJ8B,EAI9BA,GACAhB,EAL8B,EAK9BA,KAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKH,MAAOA,EAAOoB,YAAalB,GAAWgB,IAC3C,kBAAC,EAAD,CACEG,IAAKF,EACLnB,MAAOA,EACPC,KAAMA,EACNE,KAAMA,MAMCW,YAEfA,EAAYH,UAAY,CACtBI,KAAMH,IAAUU,OAAOC,YAGlB,IAAMC,EAAS","file":"component---src-templates-template-doc-js-f9bba13101f141da2bb5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post-module--post--2iiGQ\",\"title\":\"post-module--title--3CF5R\",\"coverImage\":\"post-module--coverImage--2AdMw\",\"meta\":\"post-module--meta--duw4c\",\"tags\":\"post-module--tags--2jRm2\",\"tag\":\"post-module--tag--3Tz-t\",\"readMore\":\"post-module--readMore--1HLfk\",\"postContent\":\"post-module--postContent--1132g\",\"profImgDiv\":\"post-module--profImgDiv--1yLdO\",\"profIntro\":\"post-module--profIntro--3B-5l\",\"researchInfoDiv\":\"post-module--researchInfoDiv--2GsJy\",\"researchInfo\":\"post-module--researchInfo--1r6ve\",\"researchInfoText\":\"post-module--researchInfoText--1wYOT\",\"readMore2\":\"post-module--readMore2--322OP\",\"researchLink\":\"post-module--researchLink--2Dgep\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport style from '../styles/post.module.css'\r\n\r\nconst Doc = ({\r\n  title,\r\n  path,\r\n  excerpt,\r\n  html,\r\n}) => {\r\n  \r\n  return (\r\n    <div className={style.post}>\r\n      <div className={style.postContent}>\r\n        <h1 className={style.title}>\r\n          {excerpt ? <Link to={path}>{title}</Link> : title}\r\n        </h1>    \r\n\r\n        {excerpt ? (\r\n          <>\r\n            <p>{excerpt}</p>        \r\n          </>\r\n        ) : (\r\n          <>\r\n            <div dangerouslySetInnerHTML={{ __html: html }} />            \r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nDoc.propTypes = {\r\n  title: PropTypes.string,\r\n  path: PropTypes.string,\r\n  excerpt: PropTypes.string,\r\n  html: PropTypes.string,\r\n}\r\n\r\nexport default Doc\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport SEO from '../components/seo'\r\nimport Layout from '../components/layout'\r\nimport Doc from '../components/doc'\r\n\r\nconst DocTemplate = ({ data }) => {\r\n  const {\r\n    frontmatter: { title, path, excerpt },\r\n    excerpt: autoExcerpt,\r\n    id,\r\n    html,\r\n  } = data.markdownRemark\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} description={excerpt || autoExcerpt} />\r\n      <Doc\r\n        key={id}\r\n        title={title}       \r\n        path={path}                \r\n        html={html}                        \r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default DocTemplate\r\n\r\nDocTemplate.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const docsQuery = graphql`\r\n  query($path: String) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      frontmatter {\r\n        title       \r\n        path        \r\n        excerpt              \r\n      }\r\n      id\r\n      html\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}